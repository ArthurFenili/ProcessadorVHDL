ADDI
opcode: 1000
formato da instrução:
XXXX YYY ZZZZZZZZZ
opcode | registrador de destino | constante
ADDI.L #<data>,Dx

JMP
opcode: 1111
formato da instrução:
XXXX ----- YYYYYYY
opcode | ----- | endereço do deslocamento
JMP <ea>y

MOVE
opcode: 0100
formato da instrução:
XXXX YYY ZZZ ------
opcode | registrador de destino | registrador de origem | ------
MOVE.sz <ea>y,<ea>x

MOVE (load word)
opcode: 0101
formato da instrução:
XXXX YYY ZZZ ------
opcode | registrador de destino | registrador de origem(endereço da ram) | ------
MOVE.sz <ea>y,<ea>x

MOVE (store word)
opcode: 0111
formato da instrução:
XXXX YYY ZZZ ------
opcode | registrador de destino(endereço da ram) | registrador de origem | ------
MOVE.sz <ea>y,<ea>x

ADD
opcode: 0001
formato da instrução:
XXXX YYY ZZZ ------
opcode | registrador de destino | registrador de origem | ------
ADD.L <ea>y,Dx

SUB
opcode: 0010
formato da instrução:
XXXX YYY ZZZ  ------
opcode | registrador de destino | registrador de origem | ------
SUB.L <ea>y,Dx

NOP
opcode: 0000
formato da instrução:
XXXX ------------
opcode | ---------------

CMP
opcode: 1011
formato da instrução:
XXXX YYY ZZZ ------
opcode | registrador 1 | registrador 2 | -----
CMP.sz <ea>y,Dx

BLT
opcode (branch): 0110
opcode (less than): 1101
teste de flag: N & ~V | ~N & V
formato da instrução:
XXXX YYYY ZZZZZZZZ
opcode(branch) | opcode(LT) | endereços de pulo
Bcc.sz <label>

BGE
opcode (branch): 0110
opcode (greater or equal): 1100
teste de flag: N & V | ~N & ~V
formato da instrução:
XXXX YYYY ZZZZZZZZ
opcode(branch) | opcode(GE) | endereços de pulo
Bcc.sz <label>


move load word vai pegar o valor que está no endereço ZZZ da ram e salvar
no endereço YYY do banco reg
pra isso precisa ativar o wr_en do YYY

move store word vai pegar o valor que ta no endereço ZZZ do banco reg
e salvar no endereço YYY da ram